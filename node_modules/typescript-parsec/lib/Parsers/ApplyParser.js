"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.kmid = exports.kright = exports.kleft = exports.apply = void 0;
var SequencialParser_1 = require("./SequencialParser");
function apply(p, callback) {
    return {
        parse: function (token) {
            var output = p.parse(token);
            if (output.successful) {
                return {
                    candidates: output.candidates.map(function (value) {
                        return {
                            firstToken: token,
                            nextToken: value.nextToken,
                            result: callback(value.result, [token, value.nextToken])
                        };
                    }),
                    successful: true,
                    error: output.error
                };
            }
            else {
                return output;
            }
        }
    };
}
exports.apply = apply;
function kleft(p1, p2) {
    return apply(SequencialParser_1.seq(p1, p2), function (value) { return value[0]; });
}
exports.kleft = kleft;
function kright(p1, p2) {
    return apply(SequencialParser_1.seq(p1, p2), function (value) { return value[1]; });
}
exports.kright = kright;
function kmid(p1, p2, p3) {
    return apply(SequencialParser_1.seq(p1, p2, p3), function (value) { return value[1]; });
}
exports.kmid = kmid;
//# sourceMappingURL=ApplyParser.js.map